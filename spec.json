{
  "openapi": "3.0.0",
  "info": {
    "title": "Your API Name",
    "version": "1.0.0",
    "description": "API Documentation"
  },
  "servers": [
    {
      "url": ""
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Login or register a user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ILoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ILoginResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token using refresh token from HTTP-only cookie",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "New access token"
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "New refresh token (if rotated)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout a user",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Logout message"
                    }
                  },
                  "example": {
                    "message": "Logged out successfully"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "post": {
        "summary": "Create a new project",
        "description": "Creates a new project with the given name.",
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all projects",
        "description": "Retrieves a list of all projects for the authenticated user.",
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IProjectResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "summary": "Get a project by ID",
        "description": "Retrieves a project with its nodes and edges by ID.",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IProjectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Edit a project",
        "description": "Updates a project's nodes and edges.",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUpdateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IProjectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a project",
        "description": "Deletes a project by ID.",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ILoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "displayName": {
            "type": "string",
            "description": "User's display name"
          },
          "photoURL": {
            "type": "string",
            "description": "URL to user's profile photo"
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number"
          },
          "uid": {
            "type": "string",
            "description": "User's unique identifier"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token"
          },
          "accessToken": {
            "type": "string",
            "description": "Access token"
          }
        },
        "required": [
          "email",
          "displayName",
          "uid"
        ],
        "example": {
          "email": "user@example.com",
          "displayName": "John Doe",
          "photoURL": "https://example.com/photo.jpg",
          "phoneNumber": "+1234567890",
          "uid": "user123"
        }
      },
      "ILoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's ID in the system"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account last update timestamp"
          },
          "accessToken": {
            "type": "string",
            "description": "Access token"
          }
        },
        "required": [
          "id",
          "email",
          "createdAt",
          "updatedAt"
        ],
        "example": {
          "id": "12345",
          "email": "user@example.com",
          "createdAt": "2023-01-01T00:00:00.000Z",
          "updatedAt": "2023-01-01T00:00:00.000Z"
        }
      },
      "IErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": [
          "error"
        ],
        "example": {
          "error": "An error occurred during processing"
        }
      },
      "INodeType": {
        "type": "string",
        "enum": [
          "TASK"
        ]
      },
      "ITaskStatus": {
        "type": "string",
        "enum": [
          "TODO",
          "IN_PROGRESS",
          "DONE"
        ]
      },
      "IProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the project"
          },
          "name": {
            "type": "string",
            "description": "Name of the project"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITaskNode"
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITaskEdge"
            }
          }
        }
      },
      "ITaskNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "status": {
                "$ref": "#/components/schemas/ITaskStatus"
              }
            }
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            }
          },
          "type": {
            "$ref": "#/components/schemas/INodeType"
          }
        }
      },
      "ITaskEdge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/INodeType"
          },
          "animated": {
            "type": "boolean"
          },
          "deletable": {
            "type": "boolean"
          },
          "reconnectable": {
            "type": "boolean"
          }
        }
      },
      "ICreateProjectRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the project"
          }
        },
        "required": [
          "name"
        ],
        "example": {
          "name": "My New Project"
        }
      },
      "IProjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the project"
          },
          "name": {
            "type": "string",
            "description": "Name of the project"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITaskNode"
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITaskEdge"
            }
          }
        }
      },
      "IUpdateProjectRequest": {
        "type": "object",
        "properties": {
          "nodesToUpdate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITaskNode"
            }
          },
          "name": {
            "type": "string"
          },
          "nodesToAdd": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITaskNode"
            }
          },
          "nodesToRemove": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "edgesToAdd": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITaskEdge"
            }
          },
          "edgesToRemove": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}