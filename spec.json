{
  "openapi": "3.0.0",
  "info": {
    "title": "Your API Name",
    "version": "1.0.0",
    "description": "API Documentation"
  },
  "servers": [
    {
      "url": ""
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Login or register a user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token using refresh token from HTTP-only cookie",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Successfully refreshed token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "New access token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token"
          }
        }
      }
    },
    "/projects": {
      "post": {
        "summary": "Create a new project",
        "description": "Creates a new project with the given name.",
        "tags": ["Projects"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the project"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all projects",
        "description": "Retrieves a list of all projects with their associated nodes and edges.",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "summary": "Get a project by ID",
        "description": "Retrieves a project with its nodes and edges by ID.",
        "tags": ["Projects"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Edit a project",
        "description": "Updates a project's nodes and edges.",
        "tags": ["Projects"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nodesToUpdate": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object"
                        },
                        "position": {
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "nodesToAdd": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object"
                        },
                        "position": {
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "nodesToRemove": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "edgesToAdd": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        },
                        "target": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "edgesToRemove": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a project",
        "description": "Deletes a project by ID.",
        "tags": ["Projects"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "displayName": {
            "type": "string",
            "description": "User's display name"
          },
          "photoURL": {
            "type": "string",
            "description": "URL to user's profile photo"
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number"
          },
          "uid": {
            "type": "string",
            "description": "User's unique identifier"
          }
        },
        "required": ["email", "displayName", "uid"],
        "example": {
          "email": "user@example.com",
          "displayName": "John Doe",
          "photoURL": "https://example.com/photo.jpg",
          "phoneNumber": "+1234567890",
          "uid": "user123"
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's ID in the system"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account last update timestamp"
          }
        },
        "required": ["id", "email", "createdAt", "updatedAt"],
        "example": {
          "id": "12345",
          "email": "user@example.com",
          "createdAt": "2023-01-01T00:00:00.000Z",
          "updatedAt": "2023-01-01T00:00:00.000Z"
        }
      },
      "NodeType": {
        "type": "string",
        "enum": ["TASK"]
      },
      "TaskStatus": {
        "type": "string",
        "enum": ["TODO", "IN_PROGRESS", "DONE"]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the project"
          },
          "name": {
            "type": "string",
            "description": "Name of the project"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskNode"
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskEdge"
            }
          }
        }
      },
      "TaskNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "status": {
                "$ref": "#/components/schemas/TaskStatus"
              }
            }
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            }
          },
          "type": {
            "$ref": "#/components/schemas/NodeType"
          }
        }
      },
      "TaskEdge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/NodeType"
          },
          "animated": {
            "type": "boolean"
          },
          "deletable": {
            "type": "boolean"
          },
          "reconnectable": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "tags": []
}
